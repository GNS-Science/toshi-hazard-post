import importlib.resources as resources
from unittest import mock

import numpy as np
import pandas as pd

import toshi_hazard_post.local_config
from toshi_hazard_post.aggregation import run_aggregation
from toshi_hazard_post.aggregation_args import load_input_args

fixture_dir = resources.files('tests.fixtures.end_to_end')
parquet_filepath = fixture_dir / 'rlz_probs_WLG.pq'
args_filepath = fixture_dir / 'hazard.toml'

# this fixture was generated by toshi-hazard-post-v1
aggs_expected_filepath = fixture_dir / 'aggregations_275_PGA_WLG.npy'


@mock.patch('toshi_hazard_post.aggregation_calc.save_aggregations')
@mock.patch('toshi_hazard_post.aggregation_calc.load_realizations')
def test_end_to_end(load_mock, save_mock, monkeypatch):
    aggs_expected = np.load(aggs_expected_filepath)

    def mock_config():
        return dict(NUM_WORKERS=1)

    # Note that mocking must be done in the module where the mocked object is called
    monkeypatch.setattr(toshi_hazard_post.aggregation, 'get_config', mock_config)
    load_mock.return_value = pd.read_parquet(parquet_filepath)
    agg_args = load_input_args(args_filepath)

    print(agg_args)

    run_aggregation(agg_args)
    aggs = save_mock.mock_calls[0].args[0]
    np.testing.assert_allclose(aggs, aggs_expected, rtol=1e-07, atol=1e-08)
