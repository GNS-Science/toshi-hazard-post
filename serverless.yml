service: nzshm22-toshi-hazard-post

frameworkVersion: '3'

plugins:
  - serverless-python-requirements
  - serverless-offline-sns

package:
  individually: false
  exclude:
    - .git/**
    - .github/**
    - .mypy_cache/**
    - __pycache__/**
    - .pytest_cache/**
    - .tox/**
    - test/**
    - demo/**
    - doc/**
    - dist/**
    - site/**
    - SCRATCH/**
    - offline/**
    - .dynamodb/**
    - node_modules/**
    - prof/**
    - package.json
    - package-log.json

provider:
  name: aws
  runtime: python3.8
  region: ap-southeast-2
  environment:
    REGION: ${self:custom.region}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "dynamodb:Scan"
         - "dynamodb:DescribeTable"
         - "dynamodb:CreateTable"
         - "dynamodb:GetItem"
         - "dynamodb:PutItem"
         - "dynamodb:Query"
         - "dynamodb:BatchWriteItem"
         - "SNS:Publish"
         - "SNS:ListTopics"
         - "SNS:CreateTopic"
         - "cloudwatch:PutMetricData"
       Resource: "*"


custom:
  # DRY constants: define all compound/generated names in one place
  # Override args are: .. defaults:
  # --app_acronym          signed-uploader
  # --s3_bucket           self:custom.app_acronym
  # --s3_key_base         self:custom.stage
  # --region              us-east-1
  # --stage               test
  # --deletion_policy     delete

  app_acronym: ${opt:acronym, self:service}
  default_stage: local
  stage: ${opt:stage, self:custom.default_stage}
  stack_name: ${self:custom.app_acronym}-${self:custom.stage}
  region: ${opt:region, self:provider.region}
  deletion_policy: Delete

  #is_topic_name: ${self:custom.stack_name}-analyse-inversion-solution
  aggregation_task_topic_name: ${self:custom.stack_name}-hazard-aggregation-task
  cw_app_name_api: ${self:custom.stack_name}-API
  cw_app_name_analysis: ${self:custom.stack_name}-ANALYSIS

  pythonRequirements:
    dockerizePip: non-linux
    slim: true
    slimPatterns:
      - '**/*.egg-info*'
    noDeploy:
      - botocore

  serverless-offline-sns:
    port: 4002 # a free port for the sns server to run on
    debug: false

  # dynamodb:
  # # DynamoDB Local maybe useful for testing THS
  #   stages:
  #     - dev
  #   start:
  #     port: 8000
  #     inMemory: true
  #     heapInitial: 200m
  #     heapMax: 1g
  #     # migrate: true
  #     # seed: true
  #     # convertEmptyValues: true
  #   seed:
  #     domain:
  #       sources:
  #         - table: ${self:custom.stage}-solutions
  #           sources: [./offline/migrations/solutions-seed.json]

functions:

  aggregation-task:
    description: The Aggregation Task handler
    handler: toshi_hazard_post.hazard_aggregation.aggregation_task.handler
    memorySize: 10240 # optional, in MB, default is 1024
    timeout: 900 # optional, in seconds, default is 6
    events:
      - sns:
          topicName: ${self:custom.aggregation_task_topic_name}
    environment:
      NZSHM22_TOSHI_API_URL: ${env:NZSHM22_TOSHI_API_URL}
      NZSHM22_TOSHI_API_ENABLED: ${env:NZSHM22_TOSHI_API_ENABLED}
      # NZSHM22_TOSHI_API_KEY: ${env:NZSHM22_TOSHI_API_KEY}
      # SLS_OFFLINE: ${env:SLS_OFFLINE}
      DEPLOYMENT_STAGE: ${self:custom.stage}
      SNS_AGG_TASK_TOPIC: ${self:custom.is_topic_name}
      NZSHM22_HAZARD_STORE_STAGE: ${self:custom.stage}
